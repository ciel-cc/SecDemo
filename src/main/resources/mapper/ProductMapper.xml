<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.secshow.demo.mapper.ProductMapper">
  <resultMap id="BaseResultMap" type="com.secshow.demo.model.Product">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="deposit" jdbcType="DECIMAL" property="deposit" />
    <result column="rent_price" jdbcType="DECIMAL" property="rentPrice" />
    <result column="freight" jdbcType="DECIMAL" property="freight" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
    <result column="cate_id" jdbcType="INTEGER" property="cateId" />
    <result column="provider_user_id" jdbcType="INTEGER" property="providerUserId" />
    <result column="buyer_user_id" jdbcType="INTEGER" property="buyerUserId" />
    <result column="statu" jdbcType="INTEGER" property="statu" />
    <result column="rent_or_sail" jdbcType="TINYINT" property="rentOrSail" />
    <result column="release_time" jdbcType="TIMESTAMP" property="releaseTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_by" jdbcType="INTEGER" property="createBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_by" jdbcType="INTEGER" property="updateBy" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
    <result column="img" jdbcType="VARCHAR" property="img" />
    <result column="owner_name" jdbcType="VARCHAR" property="ownerName" />
    <result column="owner_phone" jdbcType="VARCHAR" property="ownerPhone" />
    <result column="owner_address" jdbcType="VARCHAR" property="ownerAddress" />
    <collection property="proimgs" ofType="com.secshow.demo.model.Proimg" column="pro_id">
      <id column="pid" jdbcType="INTEGER" property="id" />
      <result column="img_url" jdbcType="VARCHAR" property="imgUrl" />
      <result column="user_id" jdbcType="INTEGER" property="userId" />
      <result column="pro_id" jdbcType="INTEGER" property="proId" />
    </collection>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.secshow.demo.model.Product" keyProperty="id">
    insert into product ( name, amount,
      price, deposit, rent_price, freight, detail, cate_id,
      provider_user_id, buyer_user_id, statu, 
      rent_or_sail, release_time, create_time, 
      create_by, update_time, update_by, 
      img, owner_name,
      owner_phone, owner_address)
    values (#{name,jdbcType=VARCHAR}, #{amount,jdbcType=INTEGER},
      #{price,jdbcType=DECIMAL}, #{deposit,jdbcType=DECIMAL}, #{rentPrice,jdbcType=DECIMAL},
       #{freight,jdbcType=DECIMAL},#{detail,jdbcType=VARCHAR}, #{cateId,jdbcType=INTEGER},
      #{providerUserId,jdbcType=INTEGER}, #{buyerUserId,jdbcType=INTEGER}, #{statu,jdbcType=VARCHAR}, 
      #{rentOrSail,jdbcType=TINYINT}, #{releaseTime,jdbcType=TIMESTAMP}, CURRENT_TIMESTAMP ,
      #{providerUserId,jdbcType=INTEGER}, CURRENT_TIMESTAMP , #{providerUserId,jdbcType=INTEGER},
      #{img,jdbcType=VARCHAR}, #{ownerName,jdbcType=VARCHAR},
      #{ownerPhone,jdbcType=VARCHAR}, #{ownerAddress,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.secshow.demo.model.Product">
    update product
    set name = #{name,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      deposit = #{deposit,jdbcType=DECIMAL},
      rent_price = #{rentPrice,jdbcType=DECIMAL},
      freight = #{freight,jdbcType=DECIMAL},
      detail = #{detail,jdbcType=VARCHAR},
      cate_id = #{cateId,jdbcType=INTEGER},
      provider_user_id = #{providerUserId,jdbcType=INTEGER},
      buyer_user_id = #{buyerUserId,jdbcType=INTEGER},
      statu = #{statu,jdbcType=VARCHAR},
      rent_or_sail = #{rentOrSail,jdbcType=TINYINT},
      release_time = #{releaseTime,jdbcType=TIMESTAMP},
      update_time = CURRENT_TIMESTAMP,
      update_by = #{updateBy,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=INTEGER},
      img = #{img,jdbcType=VARCHAR},
      owner_name = #{ownerName,jdbcType=VARCHAR},
      owner_phone = #{ownerPhone,jdbcType=VARCHAR},
      owner_address = #{ownerAddress,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select p.id, name, amount, price, deposit, rent_price, freight, detail, cate_id, provider_user_id, buyer_user_id,
    statu, rent_or_sail, release_time, p.create_time, p.create_by, p.update_time, p.update_by,
    p.is_deleted, img, owner_name, owner_phone, owner_address, pi.id, pi.img_url, pi.user_id, pi.pro_id
    from product p left join proimg pi on p.id = pi.pro_id
    where p.id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByCateId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select p.id, name, amount, price, deposit, rent_price, freight, detail, cate_id, provider_user_id, buyer_user_id,
    statu, rent_or_sail, release_time, p.create_time, p.create_by, p.update_time, p.update_by,
    p.is_deleted, img, owner_name, owner_phone, owner_address, pi.id pid, pi.img_url, pi.user_id, pi.pro_id
    from product p left join proimg pi on p.id = pi.pro_id
    where cate_id = #{cateId,jdbcType=INTEGER} and p.is_deleted = 0
  </select>
  <select id="selectByType" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select p.id, name, amount, price, deposit, rent_price, freight, detail, cate_id, provider_user_id, buyer_user_id,
    statu, rent_or_sail, release_time, p.create_time, p.create_by, p.update_time, p.update_by,
    p.is_deleted, img, owner_name, owner_phone, owner_address, pi.id pid, pi.img_url, pi.user_id, pi.pro_id
    from product p left join proimg pi on p.id = pi.pro_id
    where (rent_or_sail = #{type,jdbcType=INTEGER} or rent_or_sail = 2) and p.is_deleted = 0
  </select>
  <select id="selectLikeName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select p.id, name, amount, price, deposit, rent_price, freight, detail, cate_id, provider_user_id, buyer_user_id,
    statu, rent_or_sail, release_time, p.create_time, p.create_by, p.update_time, p.update_by,
    p.is_deleted, img, owner_name, owner_phone, owner_address, pi.id pid, pi.img_url, pi.user_id, pi.pro_id
    from product p left join proimg pi on p.id = pi.pro_id
    where name like CONCAT('%', #{name,jdbcType=VARCHAR}, '%') and p.is_deleted = 0
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select p.id, name, amount, price, deposit, rent_price, freight, detail, cate_id, provider_user_id, buyer_user_id,
    statu, rent_or_sail, release_time, p.create_time, p.create_by, p.update_time, p.update_by,
    p.is_deleted, img, owner_name, owner_phone, owner_address, pi.id pid, pi.img_url, pi.user_id, pi.pro_id
    from product p left join proimg pi on p.id = pi.pro_id
    where p.is_deleted = 0
  </select>
  <select id="selectByProviderTypeOut" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    /*select id, name, amount, price, deposit, detail, cate_id, provider_user_id, buyer_user_id,
    statu, rent_or_sail, release_time, create_time, create_by, update_time, update_by,

    is_deleted, img, owner_name, owner_phone, owner_address
    from product*/
    select p.id, name, amount, price, deposit, rent_price, freight, detail, cate_id, provider_user_id, buyer_user_id,
    statu, rent_or_sail, release_time, p.create_time, p.create_by, p.update_time, p.update_by,
    p.is_deleted, img, owner_name, owner_phone, owner_address, pi.id pid, pi.img_url, pi.user_id, pi.pro_id
    from product p left join proimg pi on p.id = pi.pro_id
    where provider_user_id = #{userId,jdbcType=INTEGER} and (statu = #{type,jdbcType=INTEGER} or statu = 4) and p.is_deleted = 0
    ORDER BY statu
  </select>
  <select id="selectByProviderTypeHadOut" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    /*select id, name, amount, price, deposit, rent_price, freight, detail, cate_id, provider_user_id, buyer_user_id,
    statu, rent_or_sail, release_time, create_time, create_by, update_time, update_by,
    is_deleted, img, owner_name, owner_phone, owner_address
    from product*/
    select p.id, name, amount, price, deposit, rent_price, freight, detail, cate_id, provider_user_id, buyer_user_id,
    statu, rent_or_sail, release_time, p.create_time, p.create_by, p.update_time, p.update_by,
    p.is_deleted, img, owner_name, owner_phone, owner_address, pi.id pid, pi.img_url, pi.user_id, pi.pro_id
    from product p left join proimg pi on p.id = pi.pro_id
    where provider_user_id = #{userId,jdbcType=INTEGER} and statu = #{type,jdbcType=INTEGER}
  </select>
  <select id="selectByBuyerTypeIn" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    /*select id, name, amount, price, deposit, rent_price, freight, detail, cate_id, provider_user_id, buyer_user_id,
    statu, rent_or_sail, release_time, create_time, create_by, update_time, update_by,
    is_deleted, img, owner_name, owner_phone, owner_address
    from product*/
    select p.id, name, amount, price, deposit, rent_price, freight, detail, cate_id, provider_user_id, buyer_user_id,
    statu, rent_or_sail, release_time, p.create_time, p.create_by, p.update_time, p.update_by,
    p.is_deleted, img, owner_name, owner_phone, owner_address, pi.id pid, pi.img_url, pi.user_id, pi.pro_id
    from product p left join proimg pi on p.id = pi.pro_id
    where buyer_user_id = #{userId,jdbcType=INTEGER} and statu = #{type,jdbcType=INTEGER}
  </select>
</mapper>